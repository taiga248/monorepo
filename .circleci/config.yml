version: 2.1

parameters:
  trigger:
    type: boolean
    default: true

  demo:
    type: boolean
    default: false
  sample:
    type: boolean
    default: false

executors:
  node:
    docker:
      - image: circleci/node:10.15.3

# references:
#   cache_key: &cache_key v1-dependencies-{{ checksum "package-lock.json" }}
#   save_node_modules: &save_node_modules
#     save_cache:
#       paths:
#         - node_modules
#       key: *cache_key
#   restore_node_modules: &restore_node_modules
#     restore_cache:
#       keys:
#         - *cache_key
#         - v1-dependencies-

jobs:
  trigger-workflows:
    executor: node
    steps:
      - checkout
      - run:
          name: Trigger workflows
          command: chmod +x .circleci/circle_trigger.sh && ls -l && .circleci/circle_trigger.sh

  package-install-and-lint:
    parameters:
      package_name:
        type: string

    executor: node
    steps:
      - checkout:
        path: ~/monorepo
      # - *restore_node_modules
      - run:
          command: npm install
      # - *save_node_modules
      - run:
          command: npm run lint

  build:
    parameters:
      package_name:
        type: string

    executor: node
    working_directory: ~/monorepo/packages/<< parameters.package_name >>

    steps:
      - checkout:
          path: ~/monorepo
      - run:
          name: Content
          command: |
            echo "hoge << parameters.package_name >>"
      - run:
          name: Build
          command: echo "ビルド << parameters.package_name >> ..."
      - persist_to_workspace:
          root: ~/monorepo
          paths:
            - packages/<< parameters.package_name >>

  echo:
    parameters:
      package_name:
        type: string

    executor: node
    working_directory: ~/monorepo/packages/<< parameters.package_name >>

    steps:
      - checkout:
          path: ~/monorepo
      - run:
          command: echo "Hello World tg."

workflows:
  version: 2
  ci:
    when: << pipeline.parameters.trigger >>
    jobs:
      - trigger-workflows

  demo:
    when: << pipeline.parameters.demo >>
    jobs:
      - package-install-and-lint:
      - build:
          name: demo-build
          package_name: demo
      - echo:
          name: demo-build
          package_name: demo
  sample:
    when: << pipeline.parameters.sample >>
    jobs:
      - package-install-and-lint:
      - build:
          name: sample-build
          package_name: sample
      - echo:
          name: sample-build
          package_name: sample
